{"version":3,"sources":["hooks/useSocket.js","hooks/useMessenger.js","components/ChatBox.js","App.js","index.js"],"names":["socket","io","connect","useSocket","listeners","useMemo","Object","entries","forEach","_ref","_ref2","slicedToArray","name","listener","on","useMessenger","id","_useState","useState","_useState2","log","setLog","logRef","useRef","current","addToLog","message","concat","toConsumableArray","content","from","at","moment","toISOString","emit","ChatBox","_useMessenger","_useMessenger2","sendMessage","input","setInput","getMessageClassname","cx","react_default","a","createElement","className","map","i","key","format","console","value","onChange","e","target","onKeyDown","App","isBusinessAvailable","setIsBusinessAvailable","localStorage","getItem","uuidv1","setItem","components_ChatBox","ReactDOM","render","src_App","document","getElementById"],"mappings":"6PAIMA,SAASC,EAAGC,QAAQ,4CASXC,EAPG,SAAAC,GAAS,OAAIC,kBAAQ,WAItC,OAHAC,OAAOC,QAAQH,GAAWI,QAAQ,SAAAC,GAAsB,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAApBG,EAAoBF,EAAA,GAAdG,EAAcH,EAAA,GACvDV,EAAOc,GAAGF,EAAMC,KAEVb,GACL,8CCqBYe,EA5BM,SAAAC,GAAM,IAAAC,EAEJC,mBAAS,IAFLC,EAAAb,OAAAK,EAAA,EAAAL,CAAAW,EAAA,GAEnBG,EAFmBD,EAAA,GAEdE,EAFcF,EAAA,GAGpBG,EAASC,mBACfD,EAAOE,QAAUJ,EAEjB,IAAMK,EAAW,SAAAC,GAAO,OAAIL,EAAM,GAAAM,OAAArB,OAAAsB,EAAA,EAAAtB,CAC9BgB,EAAOE,SADuB,CAEjCE,MAGK1B,EAASG,EAAU,CACxBuB,QAASD,IAaV,MAAO,CAACL,EAVY,SAAAS,GAEnBJ,EAAS,CACRK,KAAMd,EACNe,GAAIC,MAASC,cACbJ,YAED7B,EAAOkC,KAAK,UAAW,CAACL,eCkBXM,EAvCC,SAAA1B,GAAU,IAARO,EAAQP,EAARO,GAAQoB,EAEErB,EAAaC,GAFfqB,EAAA/B,OAAAK,EAAA,EAAAL,CAAA8B,EAAA,GAElBhB,EAFkBiB,EAAA,GAEbC,EAFaD,EAAA,GAAApB,EAICC,mBAAS,IAJVC,EAAAb,OAAAK,EAAA,EAAAL,CAAAW,EAAA,GAIlBsB,EAJkBpB,EAAA,GAIXqB,EAJWrB,EAAA,GAMnBsB,EAAsB,SAAAf,GAAO,OAAIgB,IACtC,UACAhB,EAAQI,OAASd,EAAK,OAAS,SAGhC,OACC2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACb1B,EAAI2B,IAAI,SAACrB,EAASsB,GAAV,OACRL,EAAAC,EAAAC,cAAA,OACCI,IAAKD,EACLF,UAAWL,EAAoBf,IAC/BiB,EAAAC,EAAAC,cAAA,YAAOb,IAAON,EAAQK,IAAImB,OAAO,SAAjC,OACAP,EAAAC,EAAAC,cAAA,YAAOM,QAAQ/B,IAAIM,EAAQI,OAASJ,EAAQI,KAA5C,MACAa,EAAAC,EAAAC,cAAA,YAAOnB,EAAQG,YAGjBc,EAAAC,EAAAC,cAAA,SACCO,MAAOb,EACPc,SAAU,SAAAC,GAAC,OAAId,EAASc,EAAEC,OAAOH,QACjCI,UAAW,SAAAF,GACI,UAAVA,EAAEL,MACLX,EAAYC,GACZC,EAAS,kCCADiB,MAvBf,WAAe,IAAAxC,EAEwCC,oBAAS,GAFjDC,EAAAb,OAAAK,EAAA,EAAAL,CAAAW,EAAA,GAEPyC,EAFOvC,EAAA,GAEcwC,EAFdxC,EAAA,GAGRnB,EAASG,EAAU,CAACuD,oBAAqBC,IAE3C3C,EAAK4C,aAAaC,QAAQ,MAS9B,OAPK7C,IACJA,EAAK8C,MACLF,aAAaG,QAAQ,KAAM/C,IAG5BhB,EAAOkC,KAAK,KAAMlB,GAEb0C,EAGJf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACmB,EAAD,CAAShD,GAAIA,KAJkB,MCpBlCiD,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3ad2a955.chunk.js","sourcesContent":["import {useMemo} from 'react';\nimport io from 'socket.io-client';\n\n//const socket = io.connect('http://localhost:5000');\nconst socket = io.connect('https://still-falls-37601.herokuapp.com/');\n\nconst useSocket = listeners => useMemo(() => {\t\n\tObject.entries(listeners).forEach(([name, listener]) => {\n\t\tsocket.on(name, listener);\n\t});\n\treturn socket;\n}, []);\n\nexport default useSocket;","import {useState, useRef} from 'react';\nimport moment from 'moment';\nimport useSocket from './useSocket';\n\nconst useMessenger = id => {\n\n\tconst [log, setLog] = useState([]);\n\tconst logRef = useRef();\n\tlogRef.current = log;\n\n\tconst addToLog = message => setLog([\n\t\t...logRef.current, \n\t\tmessage,\n\t]);\n\n\tconst socket = useSocket({\n\t\tmessage: addToLog,\n\t});\n\n\tconst sendMessage = content => {\n\t\t\n\t\taddToLog({\n\t\t\tfrom: id,\n\t\t\tat: moment().toISOString(),\n\t\t\tcontent,\n\t\t});\n\t\tsocket.emit('message', {content})\n\t};\n\n\treturn [log, sendMessage]\n};\n\nexport default useMessenger;","import React, {useState} from 'react';\nimport cx from 'classnames';\nimport useMessenger from '../hooks/useMessenger';\nimport moment from 'moment';\n\nconst ChatBox = ({id}) => {\n\n\tconst [log, sendMessage] = useMessenger(id);\n\n\tconst [input, setInput] = useState('');\n\n\tconst getMessageClassname = message => cx(\n\t\t'message',\n\t\tmessage.from === id ? 'self' : 'peer',\n\t);\n\n\treturn (\n\t\t<div className='panel'>\n\t\t\t<div className='panel message-box'>\n\t\t\t\t{log.map((message, i) => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tclassName={getMessageClassname(message)}>\n\t\t\t\t\t\t<span>{moment(message.at).format('h:mma')} - </span>\n\t\t\t\t\t\t<span>{console.log(message.from) || message.from}: </span>\n\t\t\t\t\t\t<span>{message.content}</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<input \n\t\t\t\t\tvalue={input} \n\t\t\t\t\tonChange={e => setInput(e.target.value)}\n\t\t\t\t\tonKeyDown={e => {\n\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\tsendMessage(input);\n\t\t\t\t\t\t\tsetInput('');\n\t\t\t\t\t\t}\n\t\t\t\t\t}}/>\n\t\t\t</div>\n\t\t</div>\n\n\t\t\n\t);\n}\n\nexport default ChatBox;","import React, {useState, useEffect} from 'react';\n\nimport useSocket from './hooks/useSocket';\nimport usePersistentState from './hooks/usePersistentState';\n\nimport ChatBox from './components/ChatBox'\n\nimport uuidv1 from  'uuid/v1';\n\nimport './App.css';\n\nfunction App() {\n\n\tconst [isBusinessAvailable, setIsBusinessAvailable] = useState(false);\n\tconst socket = useSocket({isBusinessAvailable: setIsBusinessAvailable});\n\n\tlet id = localStorage.getItem('id');\n\n\tif (!id) {\n\t\tid = uuidv1();\n\t\tlocalStorage.setItem('id', id);\n\t}\n\n\tsocket.emit('id', id);\n\n\tif (!isBusinessAvailable) return null;\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<ChatBox id={id} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}