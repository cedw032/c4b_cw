{"version":3,"sources":["hooks/useSocket.js","hooks/useMessenger.js","components/ChatBox.js","App.js","index.js"],"names":["socket","io","connect","useSocket","listeners","useMemo","Object","entries","forEach","_ref","_ref2","slicedToArray","name","listener","on","useMessenger","_useState","useState","_useState2","log","setLog","addToLog","message","concat","toConsumableArray","objectSpread","at","moment","console","content","toISOString","from","emit","ChatBox","_useMessenger","_useMessenger2","sendMessage","input","setInput","getMessageClassname","cx","react_default","a","createElement","className","map","i","key","format","value","onChange","e","target","onKeyDown","App","isBusinessAvailable","setIsBusinessAvailable","components_ChatBox","ReactDOM","render","src_App","document","getElementById"],"mappings":"6PAIMA,SAASC,EAAGC,QAAQ,4CASXC,EAPG,SAAAC,GAAS,OAAIC,kBAAQ,WAItC,OAHAC,OAAOC,QAAQH,GAAWI,QAAQ,SAAAC,GAAsB,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAApBG,EAAoBF,EAAA,GAAdG,EAAcH,EAAA,GACvDV,EAAOc,GAAGF,EAAMC,KAEVb,GACL,uDCwBYe,EA/BM,WAAM,IAAAC,EAEJC,mBAAS,IAFLC,EAAAZ,OAAAK,EAAA,EAAAL,CAAAU,EAAA,GAEnBG,EAFmBD,EAAA,GAEdE,EAFcF,EAAA,GAIpBG,EAAW,SAAAC,GAAO,OAAIF,EAAM,GAAAG,OAAAjB,OAAAkB,EAAA,EAAAlB,CAC9Ba,GAD8B,CAAAb,OAAAmB,EAAA,EAAAnB,CAAA,GAG7BgB,EAH6B,CAIhCI,GAAIC,IAAOL,EAAQI,UAIf1B,EAASG,EAAU,CACxBmB,QAAS,SAAAA,GAAO,OAAIM,QAAQT,IAAI,UAAWG,IAAYD,EAASC,MAejE,MAAO,CAACH,EAZY,SAAAU,GAEnB,IAAMP,EAAU,CACfI,GAAIC,MAASG,cACbC,KAAM,KACNF,WAGDR,EAASC,GACTtB,EAAOgC,KAAK,UAAWV,MCcVW,EAvCC,WAAM,IAAAC,EAEMnB,IAFNoB,EAAA7B,OAAAK,EAAA,EAAAL,CAAA4B,EAAA,GAEdf,EAFcgB,EAAA,GAETC,EAFSD,EAAA,GAAAnB,EAIKC,mBAAS,IAJdC,EAAAZ,OAAAK,EAAA,EAAAL,CAAAU,EAAA,GAIdqB,EAJcnB,EAAA,GAIPoB,EAJOpB,EAAA,GAMfqB,EAAsB,SAAAjB,GAAO,OAAIkB,IACtC,UACiB,OAAjBlB,EAAQS,KAAgB,OAAS,SAGlC,OACCU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbzB,EAAI0B,IAAI,SAACvB,EAASwB,GAAV,OACRL,EAAAC,EAAAC,cAAA,OACCI,IAAKD,EACLF,UAAWL,EAAoBjB,IAC/BmB,EAAAC,EAAAC,cAAA,YAAOrB,EAAQI,GAAGsB,OAAO,SAAzB,OACAP,EAAAC,EAAAC,cAAA,YAAOrB,EAAQS,KAAf,MACAU,EAAAC,EAAAC,cAAA,YAAOrB,EAAQO,YAGjBY,EAAAC,EAAAC,cAAA,SACCM,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAASa,EAAEC,OAAOH,QACjCI,UAAW,SAAAF,GACI,UAAVA,EAAEJ,MACLX,EAAYC,GACZC,EAAS,iBCZDgB,MAdf,WAAe,IAAAtC,EAEwCC,oBAAS,GAFjDC,EAAAZ,OAAAK,EAAA,EAAAL,CAAAU,EAAA,GAEPuC,EAFOrC,EAAA,GAEcsC,EAFdtC,EAAA,GAKd,OAFAf,EAAU,CAACoD,oBAAqB,SAAAb,GAAC,OAAId,QAAQT,IAAI,IAAKuB,IAAMc,EAAuBd,MAE9Ea,EAGJd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACc,EAAD,OAJ+B,MCPlCC,IAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.96aa7798.chunk.js","sourcesContent":["import {useMemo} from 'react';\nimport io from 'socket.io-client';\n\n//const socket = io.connect('http://localhost:5000');\nconst socket = io.connect('https://still-falls-37601.herokuapp.com/');\n\nconst useSocket = listeners => useMemo(() => {\t\n\tObject.entries(listeners).forEach(([name, listener]) => {\n\t\tsocket.on(name, listener);\n\t});\n\treturn socket;\n}, []);\n\nexport default useSocket;","import {useState} from 'react';\nimport moment from 'moment';\nimport useSocket from './useSocket';\n\nconst useMessenger = () => {\n\n\tconst [log, setLog] = useState([]);\n\n\tconst addToLog = message => setLog([\n\t\t...log, \n\t\t{\n\t\t\t...message,\n\t\t\tat: moment(message.at),\n\t\t},\n\t]);\n\n\tconst socket = useSocket({\n\t\tmessage: message => console.log('MESSAGE', message) || addToLog(message),\n\t});\n\n\tconst sendMessage = content => {\n\t\t\n\t\tconst message = {\n\t\t\tat: moment().toISOString(),\n\t\t\tfrom: 'me',\n\t\t\tcontent,\n\t\t}\n\n\t\taddToLog(message);\n\t\tsocket.emit('message', message)\n\t};\n\n\treturn [log, sendMessage]\n};\n\nexport default useMessenger;","import React, {useState} from 'react';\nimport cx from 'classnames';\nimport useMessenger from '../hooks/useMessenger';\n\nconst ChatBox = () => {\n\n\tconst [log, sendMessage] = useMessenger();\n\n\tconst [input, setInput] = useState('');\n\n\tconst getMessageClassname = message => cx(\n\t\t'message',\n\t\tmessage.from === 'me' ? 'self' : 'peer',\n\t);\n\n\treturn (\n\t\t<div className='panel'>\n\t\t\t<div className='panel message-box'>\n\t\t\t\t{log.map((message, i) => \n\t\t\t\t\t<div \n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tclassName={getMessageClassname(message)}>\n\t\t\t\t\t\t<span>{message.at.format('h:mma')} - </span>\n\t\t\t\t\t\t<span>{message.from}: </span>\n\t\t\t\t\t\t<span>{message.content}</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<input \n\t\t\t\t\tvalue={input} \n\t\t\t\t\tonChange={e => setInput(e.target.value)}\n\t\t\t\t\tonKeyDown={e => {\n\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\tsendMessage(input);\n\t\t\t\t\t\t\tsetInput('');\n\t\t\t\t\t\t}\n\t\t\t\t\t}}/>\n\t\t\t</div>\n\t\t</div>\n\n\t\t\n\t);\n}\n\nexport default ChatBox;","import React, {useState} from 'react';\n\nimport useSocket from './hooks/useSocket';\nimport ChatBox from './components/ChatBox'\n\nimport './App.css';\n\nfunction App() {\n\n\tconst [isBusinessAvailable, setIsBusinessAvailable] = useState(false);\n\tuseSocket({isBusinessAvailable: a => console.log('A', a) || setIsBusinessAvailable(a)});\n\n\tif (!isBusinessAvailable) return null;\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<ChatBox />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}